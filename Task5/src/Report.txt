	Стандартный однопоточный алгоритм умножения матриц составляет матрицу результатов 
поэлементно, но значения каждого элемента можно получить независемо от значения других, 
отсюда следует, что можно разбить нашу задачу на подзадачи и каждую подзадачу отдать отдельному 
потоку. Мы таким образом убрали нагрузку с главного потока, равномерно распрелив ее между 
другими потоками, что в свою очередь должно уменьшить время работы программы.

	Имеет смысл использовать количество потоков не больше чем количество столбцов * количество 
строчек у матрицы результатов.

	Для матрицы 20*20 оптимальным количеством потоков является 15.
	Для матрицы 200*200 время уменьшается в 2 раза при использовании от 2 до 50 потоков.
	Для матрицы 600*600 время уменьшается в 2 раза при использовании от 2 до 50 потоков.
